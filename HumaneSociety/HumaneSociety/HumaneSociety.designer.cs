#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HumaneSociety
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumaneSociety")]
	public partial class HumaneSocietyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdopter(Adopter instance);
    partial void UpdateAdopter(Adopter instance);
    partial void DeleteAdopter(Adopter instance);
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    partial void InsertBilling(Billing instance);
    partial void UpdateBilling(Billing instance);
    partial void DeleteBilling(Billing instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    #endregion
		
		public HumaneSocietyDataContext() : 
				base(global::HumaneSociety.Properties.Settings.Default.HumaneSocietyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HumaneSocietyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Adopter> Adopters
		{
			get
			{
				return this.GetTable<Adopter>();
			}
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
		
		public System.Data.Linq.Table<Billing> Billings
		{
			get
			{
				return this.GetTable<Billing>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adopter")]
	public partial class Adopter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _First_Name;
		
		private string _Middle_Initial;
		
		private string _Last_Name;
		
		private string _Street_Address;
		
		private string _Email;
		
		private System.Nullable<int> _Phone;
		
		private System.Nullable<int> _Billing_Info;
		
		private string _Personality_Profile;
		
		private System.Nullable<bool> _Small_Children;
		
		private System.Nullable<bool> _Animals;
		
		private System.Nullable<int> _Number_Of_Animals;
		
		private string _Type_Of_Animals;
		
		private System.Nullable<int> _Animals_Interested_In_Adopting;
		
		private EntityRef<Animal> _Animal;
		
		private EntityRef<Billing> _Billing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_InitialChanging(string value);
    partial void OnMiddle_InitialChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnStreet_AddressChanging(string value);
    partial void OnStreet_AddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(System.Nullable<int> value);
    partial void OnPhoneChanged();
    partial void OnBilling_InfoChanging(System.Nullable<int> value);
    partial void OnBilling_InfoChanged();
    partial void OnPersonality_ProfileChanging(string value);
    partial void OnPersonality_ProfileChanged();
    partial void OnSmall_ChildrenChanging(System.Nullable<bool> value);
    partial void OnSmall_ChildrenChanged();
    partial void OnAnimalsChanging(System.Nullable<bool> value);
    partial void OnAnimalsChanged();
    partial void OnNumber_Of_AnimalsChanging(System.Nullable<int> value);
    partial void OnNumber_Of_AnimalsChanged();
    partial void OnType_Of_AnimalsChanging(string value);
    partial void OnType_Of_AnimalsChanged();
    partial void OnAnimals_Interested_In_AdoptingChanging(System.Nullable<int> value);
    partial void OnAnimals_Interested_In_AdoptingChanged();
    #endregion
		
		public Adopter()
		{
			this._Animal = default(EntityRef<Animal>);
			this._Billing = default(EntityRef<Billing>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Initial", DbType="VarChar(1)")]
		public string Middle_Initial
		{
			get
			{
				return this._Middle_Initial;
			}
			set
			{
				if ((this._Middle_Initial != value))
				{
					this.OnMiddle_InitialChanging(value);
					this.SendPropertyChanging();
					this._Middle_Initial = value;
					this.SendPropertyChanged("Middle_Initial");
					this.OnMiddle_InitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street_Address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Street_Address
		{
			get
			{
				return this._Street_Address;
			}
			set
			{
				if ((this._Street_Address != value))
				{
					this.OnStreet_AddressChanging(value);
					this.SendPropertyChanging();
					this._Street_Address = value;
					this.SendPropertyChanged("Street_Address");
					this.OnStreet_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Int")]
		public System.Nullable<int> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billing_Info", DbType="Int")]
		public System.Nullable<int> Billing_Info
		{
			get
			{
				return this._Billing_Info;
			}
			set
			{
				if ((this._Billing_Info != value))
				{
					if (this._Billing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBilling_InfoChanging(value);
					this.SendPropertyChanging();
					this._Billing_Info = value;
					this.SendPropertyChanged("Billing_Info");
					this.OnBilling_InfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personality_Profile", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Personality_Profile
		{
			get
			{
				return this._Personality_Profile;
			}
			set
			{
				if ((this._Personality_Profile != value))
				{
					this.OnPersonality_ProfileChanging(value);
					this.SendPropertyChanging();
					this._Personality_Profile = value;
					this.SendPropertyChanged("Personality_Profile");
					this.OnPersonality_ProfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Small_Children", DbType="Bit")]
		public System.Nullable<bool> Small_Children
		{
			get
			{
				return this._Small_Children;
			}
			set
			{
				if ((this._Small_Children != value))
				{
					this.OnSmall_ChildrenChanging(value);
					this.SendPropertyChanging();
					this._Small_Children = value;
					this.SendPropertyChanged("Small_Children");
					this.OnSmall_ChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animals", DbType="Bit")]
		public System.Nullable<bool> Animals
		{
			get
			{
				return this._Animals;
			}
			set
			{
				if ((this._Animals != value))
				{
					this.OnAnimalsChanging(value);
					this.SendPropertyChanging();
					this._Animals = value;
					this.SendPropertyChanged("Animals");
					this.OnAnimalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number_Of_Animals", DbType="Int")]
		public System.Nullable<int> Number_Of_Animals
		{
			get
			{
				return this._Number_Of_Animals;
			}
			set
			{
				if ((this._Number_Of_Animals != value))
				{
					this.OnNumber_Of_AnimalsChanging(value);
					this.SendPropertyChanging();
					this._Number_Of_Animals = value;
					this.SendPropertyChanged("Number_Of_Animals");
					this.OnNumber_Of_AnimalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Of_Animals", DbType="VarChar(MAX)")]
		public string Type_Of_Animals
		{
			get
			{
				return this._Type_Of_Animals;
			}
			set
			{
				if ((this._Type_Of_Animals != value))
				{
					this.OnType_Of_AnimalsChanging(value);
					this.SendPropertyChanging();
					this._Type_Of_Animals = value;
					this.SendPropertyChanged("Type_Of_Animals");
					this.OnType_Of_AnimalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animals_Interested_In_Adopting", DbType="Int")]
		public System.Nullable<int> Animals_Interested_In_Adopting
		{
			get
			{
				return this._Animals_Interested_In_Adopting;
			}
			set
			{
				if ((this._Animals_Interested_In_Adopting != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnimals_Interested_In_AdoptingChanging(value);
					this.SendPropertyChanging();
					this._Animals_Interested_In_Adopting = value;
					this.SendPropertyChanged("Animals_Interested_In_Adopting");
					this.OnAnimals_Interested_In_AdoptingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Adopter", Storage="_Animal", ThisKey="Animals_Interested_In_Adopting", OtherKey="ID", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Adopters.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Adopters.Add(this);
						this._Animals_Interested_In_Adopting = value.ID;
					}
					else
					{
						this._Animals_Interested_In_Adopting = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Billing_Adopter", Storage="_Billing", ThisKey="Billing_Info", OtherKey="ID", IsForeignKey=true)]
		public Billing Billing
		{
			get
			{
				return this._Billing.Entity;
			}
			set
			{
				Billing previousValue = this._Billing.Entity;
				if (((previousValue != value) 
							|| (this._Billing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Billing.Entity = null;
						previousValue.Adopters.Remove(this);
					}
					this._Billing.Entity = value;
					if ((value != null))
					{
						value.Adopters.Add(this);
						this._Billing_Info = value.ID;
					}
					else
					{
						this._Billing_Info = default(Nullable<int>);
					}
					this.SendPropertyChanged("Billing");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animal")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Species;
		
		private string _Name;
		
		private string _Gender;
		
		private System.Nullable<int> _Age;
		
		private string _Breed;
		
		private string _Size;
		
		private string _Personality_Type;
		
		private System.Nullable<bool> _Special_Needs;
		
		private string _Food_Requirments;
		
		private System.Nullable<bool> _Spayed_or_Neutered;
		
		private System.Nullable<bool> _Recieved_Shots;
		
		private double _Adoption_Price;
		
		private string _Category;
		
		private EntitySet<Adopter> _Adopters;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSpeciesChanging(string value);
    partial void OnSpeciesChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnBreedChanging(string value);
    partial void OnBreedChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnPersonality_TypeChanging(string value);
    partial void OnPersonality_TypeChanged();
    partial void OnSpecial_NeedsChanging(System.Nullable<bool> value);
    partial void OnSpecial_NeedsChanged();
    partial void OnFood_RequirmentsChanging(string value);
    partial void OnFood_RequirmentsChanged();
    partial void OnSpayed_or_NeuteredChanging(System.Nullable<bool> value);
    partial void OnSpayed_or_NeuteredChanged();
    partial void OnRecieved_ShotsChanging(System.Nullable<bool> value);
    partial void OnRecieved_ShotsChanged();
    partial void OnAdoption_PriceChanging(double value);
    partial void OnAdoption_PriceChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public Animal()
		{
			this._Adopters = new EntitySet<Adopter>(new Action<Adopter>(this.attach_Adopters), new Action<Adopter>(this.detach_Adopters));
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Species", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Species
		{
			get
			{
				return this._Species;
			}
			set
			{
				if ((this._Species != value))
				{
					this.OnSpeciesChanging(value);
					this.SendPropertyChanging();
					this._Species = value;
					this.SendPropertyChanged("Species");
					this.OnSpeciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Breed", DbType="VarChar(MAX)")]
		public string Breed
		{
			get
			{
				return this._Breed;
			}
			set
			{
				if ((this._Breed != value))
				{
					this.OnBreedChanging(value);
					this.SendPropertyChanging();
					this._Breed = value;
					this.SendPropertyChanged("Breed");
					this.OnBreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(6)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Personality_Type", DbType="VarChar(MAX)")]
		public string Personality_Type
		{
			get
			{
				return this._Personality_Type;
			}
			set
			{
				if ((this._Personality_Type != value))
				{
					this.OnPersonality_TypeChanging(value);
					this.SendPropertyChanging();
					this._Personality_Type = value;
					this.SendPropertyChanged("Personality_Type");
					this.OnPersonality_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special_Needs", DbType="Bit")]
		public System.Nullable<bool> Special_Needs
		{
			get
			{
				return this._Special_Needs;
			}
			set
			{
				if ((this._Special_Needs != value))
				{
					this.OnSpecial_NeedsChanging(value);
					this.SendPropertyChanging();
					this._Special_Needs = value;
					this.SendPropertyChanged("Special_Needs");
					this.OnSpecial_NeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Food_Requirments", DbType="VarChar(MAX)")]
		public string Food_Requirments
		{
			get
			{
				return this._Food_Requirments;
			}
			set
			{
				if ((this._Food_Requirments != value))
				{
					this.OnFood_RequirmentsChanging(value);
					this.SendPropertyChanging();
					this._Food_Requirments = value;
					this.SendPropertyChanged("Food_Requirments");
					this.OnFood_RequirmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spayed_or_Neutered", DbType="Bit")]
		public System.Nullable<bool> Spayed_or_Neutered
		{
			get
			{
				return this._Spayed_or_Neutered;
			}
			set
			{
				if ((this._Spayed_or_Neutered != value))
				{
					this.OnSpayed_or_NeuteredChanging(value);
					this.SendPropertyChanging();
					this._Spayed_or_Neutered = value;
					this.SendPropertyChanged("Spayed_or_Neutered");
					this.OnSpayed_or_NeuteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieved_Shots", DbType="Bit")]
		public System.Nullable<bool> Recieved_Shots
		{
			get
			{
				return this._Recieved_Shots;
			}
			set
			{
				if ((this._Recieved_Shots != value))
				{
					this.OnRecieved_ShotsChanging(value);
					this.SendPropertyChanging();
					this._Recieved_Shots = value;
					this.SendPropertyChanged("Recieved_Shots");
					this.OnRecieved_ShotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adoption_Price", DbType="Float NOT NULL")]
		public double Adoption_Price
		{
			get
			{
				return this._Adoption_Price;
			}
			set
			{
				if ((this._Adoption_Price != value))
				{
					this.OnAdoption_PriceChanging(value);
					this.SendPropertyChanging();
					this._Adoption_Price = value;
					this.SendPropertyChanged("Adoption_Price");
					this.OnAdoption_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Adopter", Storage="_Adopters", ThisKey="ID", OtherKey="Animals_Interested_In_Adopting")]
		public EntitySet<Adopter> Adopters
		{
			get
			{
				return this._Adopters;
			}
			set
			{
				this._Adopters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Room", Storage="_Rooms", ThisKey="ID", OtherKey="Current_Animal")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Animal = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Animal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Billing")]
	public partial class Billing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name_On_Card;
		
		private int _Card_Number;
		
		private string _Expiration;
		
		private int _CVC;
		
		private string _Billing_Address;
		
		private EntitySet<Adopter> _Adopters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnName_On_CardChanging(string value);
    partial void OnName_On_CardChanged();
    partial void OnCard_NumberChanging(int value);
    partial void OnCard_NumberChanged();
    partial void OnExpirationChanging(string value);
    partial void OnExpirationChanged();
    partial void OnCVCChanging(int value);
    partial void OnCVCChanged();
    partial void OnBilling_AddressChanging(string value);
    partial void OnBilling_AddressChanged();
    #endregion
		
		public Billing()
		{
			this._Adopters = new EntitySet<Adopter>(new Action<Adopter>(this.attach_Adopters), new Action<Adopter>(this.detach_Adopters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_On_Card", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name_On_Card
		{
			get
			{
				return this._Name_On_Card;
			}
			set
			{
				if ((this._Name_On_Card != value))
				{
					this.OnName_On_CardChanging(value);
					this.SendPropertyChanging();
					this._Name_On_Card = value;
					this.SendPropertyChanged("Name_On_Card");
					this.OnName_On_CardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Card_Number", DbType="Int NOT NULL")]
		public int Card_Number
		{
			get
			{
				return this._Card_Number;
			}
			set
			{
				if ((this._Card_Number != value))
				{
					this.OnCard_NumberChanging(value);
					this.SendPropertyChanging();
					this._Card_Number = value;
					this.SendPropertyChanged("Card_Number");
					this.OnCard_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiration", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Expiration
		{
			get
			{
				return this._Expiration;
			}
			set
			{
				if ((this._Expiration != value))
				{
					this.OnExpirationChanging(value);
					this.SendPropertyChanging();
					this._Expiration = value;
					this.SendPropertyChanged("Expiration");
					this.OnExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVC", DbType="Int NOT NULL")]
		public int CVC
		{
			get
			{
				return this._CVC;
			}
			set
			{
				if ((this._CVC != value))
				{
					this.OnCVCChanging(value);
					this.SendPropertyChanging();
					this._CVC = value;
					this.SendPropertyChanged("CVC");
					this.OnCVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billing_Address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Billing_Address
		{
			get
			{
				return this._Billing_Address;
			}
			set
			{
				if ((this._Billing_Address != value))
				{
					this.OnBilling_AddressChanging(value);
					this.SendPropertyChanging();
					this._Billing_Address = value;
					this.SendPropertyChanged("Billing_Address");
					this.OnBilling_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Billing_Adopter", Storage="_Adopters", ThisKey="ID", OtherKey="Billing_Info")]
		public EntitySet<Adopter> Adopters
		{
			get
			{
				return this._Adopters;
			}
			set
			{
				this._Adopters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Billing = this;
		}
		
		private void detach_Adopters(Adopter entity)
		{
			this.SendPropertyChanging();
			entity.Billing = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Room_Number;
		
		private bool _Is_Available;
		
		private System.Nullable<int> _Current_Animal;
		
		private EntityRef<Animal> _Animal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoom_NumberChanging(int value);
    partial void OnRoom_NumberChanged();
    partial void OnIs_AvailableChanging(bool value);
    partial void OnIs_AvailableChanged();
    partial void OnCurrent_AnimalChanging(System.Nullable<int> value);
    partial void OnCurrent_AnimalChanged();
    #endregion
		
		public Room()
		{
			this._Animal = default(EntityRef<Animal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_Number", DbType="Int NOT NULL")]
		public int Room_Number
		{
			get
			{
				return this._Room_Number;
			}
			set
			{
				if ((this._Room_Number != value))
				{
					this.OnRoom_NumberChanging(value);
					this.SendPropertyChanging();
					this._Room_Number = value;
					this.SendPropertyChanged("Room_Number");
					this.OnRoom_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Available", DbType="Bit NOT NULL")]
		public bool Is_Available
		{
			get
			{
				return this._Is_Available;
			}
			set
			{
				if ((this._Is_Available != value))
				{
					this.OnIs_AvailableChanging(value);
					this.SendPropertyChanging();
					this._Is_Available = value;
					this.SendPropertyChanged("Is_Available");
					this.OnIs_AvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Animal", DbType="Int")]
		public System.Nullable<int> Current_Animal
		{
			get
			{
				return this._Current_Animal;
			}
			set
			{
				if ((this._Current_Animal != value))
				{
					if (this._Animal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrent_AnimalChanging(value);
					this.SendPropertyChanging();
					this._Current_Animal = value;
					this.SendPropertyChanged("Current_Animal");
					this.OnCurrent_AnimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Animal_Room", Storage="_Animal", ThisKey="Current_Animal", OtherKey="ID", IsForeignKey=true)]
		public Animal Animal
		{
			get
			{
				return this._Animal.Entity;
			}
			set
			{
				Animal previousValue = this._Animal.Entity;
				if (((previousValue != value) 
							|| (this._Animal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Animal.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Animal.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._Current_Animal = value.ID;
					}
					else
					{
						this._Current_Animal = default(Nullable<int>);
					}
					this.SendPropertyChanged("Animal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
